name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - main  # Se ejecuta al hacer push a la rama main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run build  # Ejecuta el comando de build de tu framework

      - name: Configure Firebase
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
        run: |
          echo "Configurando Firebase..."
          cat > src/environments/environment.prod.ts <<EOF
          export const environment = {
            production: true,
            firebase: {
              apiKey: '${FIREBASE_API_KEY}',
              authDomain: '${FIREBASE_AUTH_DOMAIN}',
              projectId: '${FIREBASE_PROJECT_ID}',
              storageBucket: '${FIREBASE_STORAGE_BUCKET}',
              messagingSenderId: '${FIREBASE_MESSAGING_SENDER_ID}',
              appId: '${FIREBASE_APP_ID}',
              databaseURL: '${FIREBASE_DATABASE_URL}'
            }
          };
          EOF

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'  # Necesitas agregar este secret (ver Paso 3)
          channelId: live  # Opcional: para canales de despliegue
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
